@page "/recipes"

@using DataAccess.Models;
@using Services;

@inject IRecipeService RecipeService
@inject NavigationManager NavigationManager

<div class="container-fluid">
    <div class="row justify-content-between mb-3">
        <h3>Recipes List</h3>
        <button type="button" class="btn btn-sm btn-success" @onclick='() => NavigationManager.NavigateTo("recipe/create")'><i class="fas fa-plus pr-2"></i>Create</button>
    </div>

    <div class="row">
        <table class="table table-striped table-hover table-sm">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Title</th>
                    <th scope="col">Description</th>
                    <th scope="col">Date Created</th>
                    <th scope="col">Date Updated</th>
                </tr>
            </thead>
            <tbody>
                @if (!Recipes.Any())
                {
                    <tr>
                        <th scope="row" colspan="5">No recipes available</th>
                    </tr>
                }
                else
                {
                    foreach (var recipe in Recipes)
                    {
                        <tr @onclick="() => RedirectTo(recipe.Id)" class="cursor-pointer">
                            <th scope="row">@recipe.Id</th>
                            <td>@recipe.Title</td>
                            <td>@recipe.Description.Substring(0,50) ...</td>
                            <td>@recipe.DateCreated</td>
                            <td>@recipe.DateUpdated</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    List<Recipe> Recipes = new List<Recipe>();

    protected override async Task OnInitializedAsync()
    {
        Recipes = RecipeService.List();
    }

    private void RedirectTo(int recipeId)
    {
        NavigationManager.NavigateTo($"/recipe/details/{recipeId}");
    }
}
