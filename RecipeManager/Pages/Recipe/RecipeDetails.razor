@page "/recipe/details/{Id:int}"
@page "/recipe/create"

@using DataAccess.Models
@using Services

@inject IRecipeService RecipeService
@inject IToastService ToastService
@inject NavigationManager NavigationManager

<div class="container d-flex justify-content-center m-0 p-0">

    <EditForm Model="@Recipe" OnValidSubmit="@HandleOnValidSubmit" class="col-sm-12 col-md-10 col-lg-8 p-0">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="title">Title</label>
            <InputText id="title" @bind-Value="@Recipe.Title" class="form-control" placeholder="Green curry..." />
            <ValidationMessage For="@(() => Recipe.Title)" />
        </div>

        <div class="form-group">
            <label for="description">Description</label>
            <InputTextArea id="description" @bind-Value="@Recipe.Description" class="form-control" placeholder="Cook the potatoes in boiling water for about 10 mins..." rows="5" />
        </div>

        <div class="col-lg-12">

            <div class="form-group test btn-toolbar">
                <button type="submit" href="/recipes" class="btn btn-sm btn-primary" hidden="@(Id == null)"><i class="fas fa-save pr-2"></i>Save</button>
                <button type="submit" class="btn btn-sm btn-success" hidden="@(Id != null)"><i class="fas fa-plus pr-2"></i>Create</button>
                <a href="/recipes" class="btn btn-sm btn-secondary"><i class="fas fa-times pr-2"></i>Cancel</a>
                <button type="button" class="btn btn-sm btn-danger pull-right" hidden="@(Id == null)"><i class="fas fa-trash pr-2"></i>Delete</button>
            </div>
        </div>
        @if (Id != null)
        {
            <hr />
            <label>Created on: @Recipe.DateCreated</label> <br />
            <label>Updated on: @Recipe.DateUpdated</label>
        }
    </EditForm>

</div>


@code {
    [Parameter]
    public int? Id { get; set; }
    public Recipe Recipe = new Recipe();

    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
        {
            Recipe = RecipeService.Get(Id.Value);
        }
    }

    private void HandleOnValidSubmit()
    {
        try
        {
            if (Id != null)
            {
                RecipeService.Update(Recipe);
            }
            else
            {
                Recipe newRecipe = RecipeService.Create(Recipe);
                NavigationManager.NavigateTo($"/recipe/details/{newRecipe.Id}");
            }
            ToastService.ShowSuccess("Your recipe has been saved successfully");

        }
        catch (Exception)
        {
            ToastService.ShowError("Something went wrong while saving your recipe");
        }
    }
 }